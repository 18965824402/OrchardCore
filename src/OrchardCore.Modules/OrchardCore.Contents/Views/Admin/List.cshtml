@using OrchardCore.ContentManagement;
@using OrchardCore.Contents.ViewModels;
@inject IContentManager ContentManager
@{
    var typeDisplayName = Model.FilterBoxViewModel.Options.TypeDisplayName;
    var pageTitle = T["Manage Content"];
    if (!string.IsNullOrWhiteSpace(typeDisplayName))
    {
        pageTitle = T["Manage {0} Content", (string)typeDisplayName];
    }
}
<h1>@RenderTitleSegments(pageTitle)</h1>

@using (Html.BeginForm())
{
    @*<fieldset class="bulk-actions">
            <label><input type="checkbox" class="check-all" />@T["Select all"]</label>@T[" | "]
            <label for="publishActions">@T["Actions:"]</label>
            <select id="publishActions" name="Options.BulkAction">
                @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.None, T("Choose action...").ToString())
                @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.PublishNow, T("Publish Now").ToString())
                @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.Unpublish, T("Unpublish").ToString())
                @Html.SelectOption((ContentsBulkAction)Model.Options.BulkAction, ContentsBulkAction.Remove, T("Delete").ToString())
            </select>
            <button type="submit" name="submit.BulkEdit" value="yes">@T["Apply")</button>
        </fieldset>
    <fieldset class="bulk-actions container-fluid">
        <label for="filterResults" class="bulk-filter">@T["Show"]</label>
            <select id="filterResults" name="Options.SelectedFilter">
                @Html.SelectOption((string)Model.Options.SelectedFilter, "", T["any (show all)"])
                @foreach (var filterOption in Model.Options.FilterOptions) {
                    @Html.SelectOption((string)Model.Options.SelectedFilter, (string)filterOption.Key, (string)filterOption.Value)
                }
            </select>
    </fieldset>*@
    <fieldset class="container-fluid">
            @await Component.InvokeAsync("FilterBox",  new { vm = Model.FilterBoxViewModel  })
    </fieldset>
    @if (Model.ContentItems.Count > 0)
    {
        <ul class="list-group">
            @foreach (var contentItemSummary in Model.ContentItems)
            {
                <li class="list-group-item">
                    @await DisplayAsync(contentItemSummary)
                </li>
            }
        </ul>
    }
    else
    {
        <div class="alert alert-info">
            @T["No result found."]
        </div>
    }

    @await DisplayAsync(Model.Pager)
}